@model RioManager.Models.Rio_Account
@{
    ViewBag.Title = "Register";
    Layout = null;

}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/fancybox")
    <script type="text/javascript" src='https://www.google.com/recaptcha/api.js'></script>
    @if (Session["UserID"] != null)
    {
        <script>
            parent.$.fancybox.close();
        </script>
    }
</head>
<body>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="body-content">
        <div class="container body-content">
            <div class="form-horizontal">
                <h4>Register</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AccountContent, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AccountContent, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AccountContent, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">         
                    @Html.Label("recaptcha", new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="g-recaptcha" data-sitekey="6LdrUTgUAAAAAHxN_vZgwLb3Fl72_a8U4GGeHzp1"></div>
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>
        </div>
        }
</body>
</html>
